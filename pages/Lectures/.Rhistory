# theme_pander(base_family = "Fira Sans Book", base_size = 20)
theme_axes_math
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(
broom, here, tidyverse,
latex2exp, ggplot2, ggthemes, viridis, extrafont, gridExtra,
kableExtra,
dplyr,
lubridate,
magrittr, knitr, parallel
)
# Define pink color
red_pink <- "#e64173"
turquoise <- "#20B2AA"
grey_light <- "grey70"
grey_mid <- "grey50"
grey_dark <- "grey20"
# Dark slate grey: #314f4f
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 18, family = "STIXGeneral"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_math <- theme_void() + theme(
text = element_text(family = "MathJax_Math"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_serif <- theme_void() + theme(
text = element_text(family = "MathJax_Main"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_void() + theme(
text = element_text(family = "Fira Sans Book"),
axis.title = element_text(size = 18),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = grey_light,
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_set(theme_gray(base_size = 20))
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "grey85", size = 0.35) +
geom_point(color = red_pink, size = 2.25) +
ylab("u") +
xlab("t") +
# theme_pander(base_family = "Fira Sans Book", base_size = 20)
theme_axes_math
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(size = 0.2, color = "black") +
#geom_hline(yintercept = 0) +
#geom_vline(xintercept = 0) +
xlab("Starts") +
ylab("Time") +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 14),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "grey85", size = 0.35) +
geom_point(color = red_pink, size = 2.25) +
xlab("Starts") +
ylab("Time") +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 14),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "grey85", size = 1) +
geom_point(color = red_pink, size = 1) +
xlab("Starts") +
ylab("Time") +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 14),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "grey85", size = 1) +
geom_point(color = red_pink, size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1) +
geom_point(color = red_pink, size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = red_pink, size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
plot(hstarts ~ date, data =  estimation_data,
type = "l",
lwd = 2,
xlab = "Time",
ylab="Sales",
main = "Housing Starts")
load("ch6data.Rdata")
library(dplyr)
housing <- ch6data %>%
select(date, hstarts, seasonal) %>%
filter(date >= as.Date("1946-01-01") & date <= as.Date("1994-11-01"))
p <- ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 0.5, alpha=0.3) +
geom_point(color = "black", size = 1, alpha=0.5) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
p
estimation_data <- housing[1:576,]
evaluation_data <- housing[-1:-576,]
res1 <- lm(hstarts ~ seasonal - 1, data = estimation_data)
ggplot(data = estimation_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
estimation_data$fitted <- fitted(res1)
p <- ggplot(data = estimation_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(aes(x = date, y = fitte)), color = "red", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1)
p
p <- ggplot(data = estimation_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = fitted), color = "red", size = 1, alpha=0.3) +
geom_point(aes(x = date, y = fitted), color = "red", size = 1)
p
plot_data <- ch6data %>%
select(date, hstarts, seasonal) %>%
filter(date >= as.Date("1990-01-01") & date <= as.Date("1994-11-01"))
countIncrementalSlides: false
plot_data <- ch6data %>%
select(date, hstarts, seasonal) %>%
filter(date >= as.Date("1990-01-01") & date <= as.Date("1994-11-01"))
plot(plot_data$date, plot_data$hstarts,
type = "l",
xlab = "Time",
ylab="History, Forecasts, Realization",
ylim = c(30, 210))
polygon(c(as.Date("1994-01-01") ,  as.Date("1994-01-01"), as.Date("1994-11-01"), as.Date("1994-11-01")),
c(30, 210,  210, 30), col = "grey85", border = NA)
lines(plot_data$date, plot_data$hstarts, lwd = 2)
point_forecasts <- predict(res1, evaluation_data)
# interval forecasts
lower <- point_forecasts - 1.96*summary(res1)$sigma
upper <- point_forecasts + 1.96*summary(res1)$sigma
lines(evaluation_data$date , point_forecasts,
type = "l",
col = "red",
lwd=2,
lty=2)
lines(evaluation_data$date , lower,
type = "l",
col = "red",
lty = 2)
lines(evaluation_data$date , upper, type = "l", col = "red", lty = 2)
plot
plot_data
point_forecasts <- predict(res1, plot_data)
plot_data$fitted <- predict(res1, plot_data)
View(plot_data)
View(plot_data)
plot_data$fitted <- predict(res1, evaluation_data)
plot_data$fitted <- predict(res1, plot_data)
plot_data$fitted <-
plot_data %<>% mutate(up = fitted + 1.96*summary(res1)$sigma,
lo = fitted - 1.96*summary(res1)$sigma)
ggplot(data = plot_data) +
geom_line(mapping = aes(x = date, y = hstarts))
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(size = 0.2, color = "black") +
#geom_hline(yintercept = 0) +
#geom_vline(xintercept = 0) +
xlab("Starts") +
ylab("Time") +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 14),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
ggplot(data = housing, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
xlab("Starts") +
ylab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = fitted), colour='blue') +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5)
View(plot_data)
plot_data <- ch6data %>%
select(date, hstarts, seasonal) %>%
filter(date >= as.Date("1990-01-01") & date <= as.Date("1994-11-01"))
plot_data$forecast <- predict(res1, plot_data)
plot_data %<>% mutate(up = forecast + 1.96*summary(res1)$sigma,
lo = forecast - 1.96*summary(res1)$sigma)
ggplot(data = plot_data) +
geom_line(mapping = aes(x = date, y = hstarts)) +
geom_line(mapping = aes_string(x = 'Time', y = '`Point Forecast`'), colour='blue') +
geom_ribbon(mapping = aes_string(x = 'Time', ymin = '`Lo 95`', ymax = '`Hi 95`'), alpha = 0.5)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = fitted), colour='blue') +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour='blue') +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5)
View(plot_data)
plot_data$forecast[1:48] <- NA
plot_data %<>% mutate(up = forecast + 1.96*summary(res1)$sigma,
lo = forecast - 1.96*summary(res1)$sigma)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour='blue') +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour='blue') +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up),colour=red_pink, alpha = 0.5) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up),alpha = 0.5) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up),alpha = 0.5) +
scale_fill_manual(values=c(red_pink), name="fill") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values=c("red"), name="fill") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values="red", name="fill") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(colour="red", name="fill") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values=c("a"="red", name="Interval")) +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values=c("a"="red", name="Interval"))
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values="red", guide=FALSE))
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values="red", guide=FALSE)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.5) +
scale_fill_manual(values="red", fill="red")
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast)) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.4) +
scale_colour_manual("",values="red") +
scale_fill_manual("",values="grey12")
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.4) +
scale_colour_manual("",values="red")+
scale_fill_manual("",values="grey12")
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), alpha = 0.4) +
scale_colour_manual("",values="red")+
scale_fill_manual("",values="red")
set.seed(1)
y <- sin(seq(1, 2*pi, length.out = 100))
x <- 1:100
plotdata <- data.frame(x=x, y=y, lower = (y+runif(100, -1, -0.5)), upper = (y+runif(100, 0.5, 1)))
p <- ggplot(plotdata) + geom_line(aes(y=y, x=x, colour = "sin"))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)+
scale_colour_manual("",values="blue")+
scale_fill_manual("",values="grey12")
p
p <- ggplot(plotdata) + geom_line(aes(y=y, x=x, colour = "sin"))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)+
scale_colour_manual("",values="red")+
scale_fill_manual("",values="grey12")
p
p <- ggplot(plotdata) + geom_line(aes(y=y, x=x, colour = "sin"))+
geom_ribbon(aes(ymin=lower, ymax=upper, x=x, fill = "band"), alpha = 0.3)+
scale_colour_manual("",values="red")+
scale_fill_manual("",values="pink")
p
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill="pink", alpha = 0.4) +
# scale_colour_manual("",values="red")+
scale_fill_manual("",values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill = "pink", alpha = 0.4) +
# scale_fill_manual("", values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill = red_pink, alpha = 0.4) +
# scale_fill_manual("", values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill = red_pink, alpha = 0.1) +
# scale_fill_manual("", values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill = red_pink, alpha = 0.3) +
# scale_fill_manual("", values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
ggplot(data = plot_data, aes(x = date, y = hstarts)) +
geom_line(color = "black", size = 1, alpha=0.3) +
geom_point(color = "black", size = 1) +
geom_line(aes(x = date, y = forecast), colour=red_pink) +
geom_ribbon(aes(x = date, ymin = lo, ymax = up), fill = red_pink, alpha = 0.2) +
# scale_fill_manual("", values="red") +
ylab("Starts") +
xlab("Time") +
theme_pander(base_size = 20)
