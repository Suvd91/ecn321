microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
profvis(log_lik(theta=rep(.1,19), tire = tire1))
profvis(lLik(theta=rep(.1,19), br=br1))
log_lik <- function(theta=rep(.1,19), tire=tire){
lam   <- theta[1:4]
bet   <- theta[5:8]
alpha <- theta[9:13]
gam   <- theta[14:19]
S  <-  tire$tpop + lam[1]*tire$opop + lam[2]*tire$ngrw + lam[3]*tire$pgrw + lam[4]*tire$octy
P <- list()
P[[1]] <- log(1 - pnorm(S*VN(tire,1,alpha=alpha,bet=bet) - FN(tire,1,gam=gam)))
for(i in 2:5){
P[[i]] <- log(pnorm(S*VN(tire, i-1, alpha=alpha,bet=bet) - FN(tire,i-1,gam=gam)) -  pnorm(S*VN(tire,i,alpha=alpha,bet=bet) - FN(tire,i,gam=gam)))
}
P[[6]] <- log(  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)) )
for (i in 1:6)
P[[i]][P[[i]]==-Inf] <- -100000000
res <- sum(P[[1]][br$TIRE==0]) + sum(P[[2]][br$TIRE==1]) + sum(P[[3]][br$TIRE==2]) +
sum(P[[4]][br$TIRE==3]) + sum(P[[5]][br$TIRE==4]) + sum(P[[6]][br$TIRE>=5])
- res
}
log_lik(theta=rep(0.01,19), tire=tire)
log_lik <- function(theta=rep(.1,19), tire=tire){
lam   <- theta[1:4]
bet   <- theta[5:8]
alpha <- theta[9:13]
gam   <- theta[14:19]
S  <-  tire$tpop + lam[1]*tire$opop + lam[2]*tire$ngrw + lam[3]*tire$pgrw + lam[4]*tire$octy
P <- list()
P[[1]] <- log(1 - pnorm(S*VN(tire,1,alpha=alpha,bet=bet) - FN(tire,1,gam=gam)))
for(i in 2:5){
P[[i]] <- log(pnorm(S*VN(tire, i-1, alpha=alpha,bet=bet) - FN(tire,i-1,gam=gam)) -  pnorm(S*VN(tire,i,alpha=alpha,bet=bet) - FN(tire,i,gam=gam)))
}
P[[6]] <- log(  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)) )
for (i in 1:6)
P[[i]][P[[i]]==-Inf] <- -100000000
res <- sum(P[[1]][br$TIRE==0]) + sum(P[[2]][br$TIRE==1]) + sum(P[[3]][br$TIRE==2]) +
sum(P[[4]][br$TIRE==3]) + sum(P[[5]][br$TIRE==4]) + sum(P[[6]][br$TIRE>=5])
- res
}
log_lik(theta=rep(0.01,19), tire=tire)
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
load("~/Dropbox/micrometrics/Micrometrics/mattshum/tire.Rdata")
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
VN <- function (tire, n, alpha=rep(1,5) ,bet=rep(1,4) ) {
profit <- alpha[1] + bet[1]*tire$old + bet[2]*tire$pinc + bet[3]*tire$lnhdd + bet[4]*tire$ffrac
if (n>=2){
for (i in 2:n)
profit <- profit - alpha[i]
}
return(profit)
}
FN <- function (tire,n, gam=rep(1,6) ) {
FN<- gam[1] + gam[6] *tire$landv
if (n>=2){
for (i in 2:n)
FN <- FN  + gam[i]
}
return(FN)
}
# theta values from their paper
lam0 <- c(-.53, 2.25,.34,.23)
bet0 <- c(-0.49, -0.03, 0.004, -0.02)
alpha0 <- c(0.86, 0.03, 0.15, 0, 0.08)
gam0 <- c(0.53, 0.76, 0.46, 0.6, 0.12, -0.74)
theta0 <- c(lam0, bet0, alpha0, gam0)
log_lik <- function(theta=rep(.1,19), tire=tire){
lam   <- theta[1:4]
bet   <- theta[5:8]
alpha <- theta[9:13]
gam   <- theta[14:19]
S  <-  tire$tpop + lam[1]*tire$opop + lam[2]*tire$ngrw + lam[3]*tire$pgrw + lam[4]*tire$octy
P <- list()
P[[1]] <- log(1 - pnorm(S*VN(tire,1,alpha=alpha,bet=bet) - FN(tire,1,gam=gam)))
for(i in 2:5){
P[[i]] <- log(pnorm(S*VN(tire, i-1, alpha=alpha,bet=bet) - FN(tire,i-1,gam=gam)) -  pnorm(S*VN(tire,i,alpha=alpha,bet=bet) - FN(tire,i,gam=gam)))
}
P[[6]] <- log(  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)) )
for (i in 1:6)
P[[i]][P[[i]]==-Inf] <- -100000000
res <- sum(P[[1]][br$TIRE==0]) + sum(P[[2]][br$TIRE==1]) + sum(P[[3]][br$TIRE==2]) +
sum(P[[4]][br$TIRE==3]) + sum(P[[5]][br$TIRE==4]) + sum(P[[6]][br$TIRE>=5])
- res
}
log_lik(theta=rep(0.01,19), tire=tire)
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
library(profvis)
log_lik <- function(theta=rep(.1,19), tire=tire){
lam   <- theta[1:4]
bet   <- theta[5:8]
alpha <- theta[9:13]
gam   <- theta[14:19]
S  <-  tire$tpop + lam[1]*tire$opop + lam[2]*tire$ngrw + lam[3]*tire$pgrw + lam[4]*tire$octy
P <- list()
P[[1]] <- log(1 - pnorm(S*VN(tire,1,alpha=alpha,bet=bet) - FN(tire,1,gam=gam)))
for(i in 2:5){
P[[i]] <- log(pnorm(S*VN(tire, i-1, alpha=alpha,bet=bet) - FN(tire,i-1,gam=gam)) -  pnorm(S*VN(tire,i,alpha=alpha,bet=bet) - FN(tire,i,gam=gam)))
}
P[[6]] <- log(  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)) )
for (i in 1:6)
P[[i]][P[[i]]==-Inf] <- -100000000
res <- sum(P[[1]][tire$tire==0]) + sum(P[[2]][tire$tire==1]) + sum(P[[3]][tire$tire==2]) +
sum(P[[4]][tire$tire==3]) + sum(P[[5]][tire$tire==4]) + sum(P[[6]][tire$tire>=5])
- res
}
log_lik(theta=rep(0.01,19), tire=tire)
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
log_lik <- function(theta=rep(.1,19), tire=tire){
lam   <- theta[1:4]
bet   <- theta[5:8]
alpha <- theta[9:13]
gam   <- theta[14:19]
S  <-  tire$tpop + lam[1]*tire$opop + lam[2]*tire$ngrw + lam[3]*tire$pgrw + lam[4]*tire$octy
P <- list()
P[[1]] <- log(1 - pnorm(S*VN(tire,1,alpha=alpha,bet=bet) - FN(tire,1,gam=gam)))
P[[2]] <- log(pnorm(S*VN(tire, 1, alpha=alpha,bet=bet) - FN(tire,1,gam=gam)) -  pnorm(S*VN(tire,2,alpha=alpha,bet=bet) - FN(tire,2,gam=gam)))
P[[3]] <- log(pnorm(S*VN(tire, 2, alpha=alpha,bet=bet) - FN(tire,2,gam=gam)) -  pnorm(S*VN(tire,3,alpha=alpha,bet=bet) - FN(tire,3,gam=gam)))
P[[4]] <- log(pnorm(S*VN(tire, 3, alpha=alpha,bet=bet) - FN(tire,3,gam=gam)) -  pnorm(S*VN(tire,4,alpha=alpha,bet=bet) - FN(tire,4,gam=gam)))
P[[5]] <- log(pnorm(S*VN(tire, 4, alpha=alpha,bet=bet) - FN(tire,4,gam=gam)) -  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)))
P[[6]] <- log(  pnorm(S*VN(tire,5,alpha=alpha,bet=bet) - FN(tire,5,gam=gam)) )
for (i in 1:6)
P[[i]][P[[i]]==-Inf] <- -100000000
res <- sum(P[[1]][tire$tire==0]) + sum(P[[2]][tire$tire==1]) + sum(P[[3]][tire$tire==2]) +
sum(P[[4]][tire$tire==3]) + sum(P[[5]][tire$tire==4]) + sum(P[[6]][tire$tire>=5])
- res
}
log_lik(theta=rep(0.01,19), tire=tire)
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
microbenchmark(lLik(theta=rep(.01,19), br=br),
log_lik(theta=rep(.01,19), tire = tire), unit="relative")
M <- 100
#--- First, simulate the covariates (z and p).---
z    = matrix(sample(0:1, M*2, replace = TRUE), nrow = M);
nm   = matrix(runif(M))
#---- Second, simulate by solving the game for
#     each market...----
cutoffs = matrix(NA, M, 2);
cutoffs
#---- Second, simulate by solving the game for
#     each market...----
cutoffs = matrix(NA, M, 2)
a       = matrix(NA, M, 2)
Demand <- function(q, a, b){
max(0, a - b * q)
}
BestResponse <- function(qj, ci, a, b){
Profit <- function(qi){
-(Demand(qi + qj, a, b) - ci) * qi
}
optim(0, Profit,
qj,
method = "Brent",
lower=0, upper=a/b)$par
}
a   = 20
c   = 2
b   = 1
qj  = 0:18
qi_star = rep(NA, length(qj))
for (i in 1:length(qj)){
qi_star[i] = BestResponse(qj=qj[i], ci=c, a=a, b=b)
}
qi <- 0:18
qj_star = rep(NA, length(qi))
for (i in 1:length(qi)){
qj_star[i] = BestResponse(qj=qi[i], ci=c, a=a, b=b)
}
d <- sapply(1:20, Demand, a, b)
plot(1:20, d, type = "l", xlab="Q", ylab="Demand", lwd=2)
plot(qj, qi_star, type="l", lwd = 2, col="red", ylim=c(0, 20))
lines(qj_star, qi, type="l", lwd = 2, col="blue")
dat <- haven::read_dta("~/Downloads/ws_khoroo_Xs_entry08_aug_10perc.dta")
View(dat)
dat[, .N, by=list(khoroo_n , wsid)]
setDT(dat)
library(data.table)
setDT(dat)
dat[, .N, by=list(khoroo_n , wsid)]
dat <- haven::read_dta("~/Downloads/ws_khoroo_Xs_entry08_aug_10perc.dta")
library(data.table)
setDT(dat)
dat[, .N, by=list(khoroo_n , wsid)]
library(ggplot2)
library(GGally)
View(dat)
View(dat)
library(dplyr)
dat[, v1]
plot(dat[, v1])
dat <- dat[, list(-v1)]
View(dat)
dat <- haven::read_dta("~/Downloads/ws_khoroo_Xs_entry08_aug_10perc.dta")
setDT(dat)
dat1 <- dat[, .(-v1)]
dat1 <- dat[, .(-"v1")]
dat1 <- dat[, c(-"v1")]
dat1 <- dat[, c(-v1)]
dat1 <- dat[, c(-v1), with = FALSE]
dat1 <- dat[, -v1, with = FALSE]
View(dat)
dat1 <- dat[, c(26, 27,28,31,32), with = FALSE]
dat1 <- dat[, c(-26, -27,-28,-31,-32), with = FALSE]
View(dat1)
install.packages("pryr")
pryr::object_size(dat)
pryr::object_size(dat1)
library(ggplot2)
library(GGally)
ggpairs(data = dat1,  mapping = aes(color = wsid),
upper = list(continuous = "smooth"), lower = list(combo = "facetdensity"),
diag = list(continuous = "barDiag"))
View(dat1)
dat[khoroo_n==3]
x3 <- dat[khoroo_n==3]
View(x3)
ggpairs(data = x3,  mapping = aes(color = wsid),
upper = list(continuous = "smooth"), lower = list(combo = "facetdensity"),
diag = list(continuous = "barDiag"))
View(x3)
x3 <- dat1[khoroo_n==3]
plot(x3)
View(x3)
View(dat)
View(dat)
drop <- c(-4, 10, -13, -26, -27,-28,-31,-32)
names(dat)[drop]
names(dat)[-drop]
drop <- c(4, 10, 13, 26, 27, 28, 31, 32)
names(dat)[drop]
View(dat)
drop <- c(4, 10, 13, 14, 26, 27, 28, 31, 32, 33)
names(dat)[drop]
dat1 <- dat[, - drop, with = FALSE]
View(dat1)
x3 <- dat1[khoroo_n==3]
plot(x3)
View(dat)
View(x3)
plot(x3$davem)
hist(x3$davem)
View(x3)
hist(x3$ws_dmobi)
hist(x3$davem)-(x3$ws_dmobi)
hist(x3$davem-x3$ws_dmobi)
View(dat)
hist(x3$pop19_59)
hist(x3$entry)
hist(x3$entry, x3$davem)
plot(x3$entry, x3$davem)
x3[, mean(davem), entry]
x3[, mean_distance=mean(davem), entry]
x3[, .(mean_distance=mean(davem)), entry]
dat1[, .(mean_distance=mean(davem)), by=(entry)]
View(dat1)
dat1[, .(mean_distance=mean(davem)), by=(entry, khoroo_n)]
dat1[, .(mean_distance=mean(davem)), by=.(entry, khoroo_n)]
dat1[, .(mean_distance=mean(davem)), by=.(entry, khoroo_n)][order(khoroo_n)]
dat[, .N, by=list(khoroo_n , wsid)]
dat[, N_entry = sum(entry), by = khoroo_n]
dat[, .(N_entry = sum(entry)), by = khoroo_n]
n_entry <- dat[, .(N_entry = sum(entry)), by = khoroo_n]
View(n_entry)
dat1[, .(mean_distance = mean(davem)), by=.(entry, khoroo_n)][order(khoroo_n)]
View(dat1)
dat1[, .(mean_distance = mean(ws_mobi)), by=.(entry, khoroo_n)][order(khoroo_n)]
dat1[, .(mean_distance = mean(ws_dmobi)), by=.(entry, khoroo_n)][order(khoroo_n)]
dat1[, .(distance_to_market = mean(davem),
distance_to_khoroo = mean(ws_dmobi)), by=.(entry, khoroo_n)][order(khoroo_n)]
dat[, retailers := .N, by = khoroo_n]
dat[, list(retailers = .N), by = khoroo_n]
library(data.table)
dat <- haven::read_dta("~/Downloads/ws_khoroo_Xs_entry08_aug_10perc.dta")
setDT(dat)
DT::datatable(head(dat, 10))
library(Hmisc)
data.frame(names = names(dat), description = label(dat))
length(unique(dat$khoroo_n)) #Number of markets
length(unique(dat$wsid))     #Number of wholesalers
dat[, retailers := .N, by = khoroo_n]
dat[, list(retailers = .N), by = khoroo_n]
library(data.table)
setDT(dat)
drop <- c(4, 10, 13, 14, 26, 27, 28, 31, 32, 33)
names(dat)[drop]
dat1 <- dat[, - drop, with = FALSE]
n_entry <- dat[, .(N_entry = sum(entry)), by = khoroo_n]
dat1[, .(distance_to_market = mean(davem),
distance_to_khoroo = mean(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
library(ggplot2)
d <- dat1[, .(distance_to_market = mean(davem),
distance_to_khoroo = mean(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
View(d)
p <- ggplot(d, aes(x=d1, y=d2, col=default, shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Balance") + ylab("Income") + ggtitle("Default Data")
p
d <- dat1[, .(d1 = mean(davem),
d2 = mean(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
library(ggplot2)
p <- ggplot(d, aes(x=d1, y=d2, col=default, shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Balance") + ylab("Income") + ggtitle("Default Data")
p
library(ggplot2)
p <- ggplot(d, aes(x=d1, y=d2, col=entry, shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Balance") + ylab("Income") + ggtitle("Default Data")
p
library(ggplot2)
p <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Balance") + ylab("Income") + ggtitle("Default Data")
p
library(ggplot2)
p <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Distance to Market") + ggtitle("")
p
library(ggthemes)
library(ggplot2)
library(ggthemes)
p <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Distance to Market") + ggtitle("")
p + theme_fivethirtyeight()
library(ggplot2)
library(ggthemes)
p <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Distance to Market") + ggtitle("")
p + theme_bw()
library(ggplot2)
library(ggthemes)
p <- ggplot(dat1, aes(x=davem, y=ws_dmobi, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Distance to Market") + ggtitle("")
p1 <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
p1 + theme_bw()
p + theme_bw()
d <- dat1[, .(d1 = median(davem),
d2 = median(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
p <- ggplot(dat1, aes(x=davem, y=ws_dmobi, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Distance to Market") + ggtitle("")
p1 <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
p1 + theme_bw()
d <- dat1[, .(d1 = mean(davem),
d2 = mean(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
library(ggplot2)
library(ggthemes)
p <- ggplot(d, aes(x=d1, y=d2, col=factor(entry), shape = factor(entry))) +
geom_point(alpha=0.7) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
p + theme_bw()
View(dat1)
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=1))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g1
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=entry))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g1
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry)))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g1
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry)))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g2 <- ggplot(d1, aes(x=d1, y = d2))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Default") + ylab("Income") + ggtitle(" Income vs. Default")
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry)))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g2 <- ggplot(d, aes(x=d1, y = d2))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Default") + ylab("Income") + ggtitle(" Income vs. Default")
g2
g1 <- ggplot(dat1, aes(x=davem, y = ws_dmobi))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry)))+
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
g2 <- ggplot(d, aes(x=d1, y = d2, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Default") + ylab("Income") + ggtitle(" Income vs. Default")
g2
g1 <- ggplot(d, aes(x=entry, y = d1, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle(" Income vs. Default")
g1 <- ggplot(d, aes(x=entry, y = d1, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle(" Income vs. Default")
g1
d[, entry1:=factor(entry),]
d[, entry:=factor(entry),]
p <- ggplot(d, aes(x=d1, y=d2, col=entry, shape = entry)) +
geom_point(alpha=0.7) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
p + theme_bw()
g1 <- ggplot(d, aes(x=entry, y = d1, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Entry") + ylab("Mean Distance to the Khoroo") + ggtitle(" Income vs. Default")
g1
g1 <- ggplot(d, aes(x=entry, y = d1, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Entry") + ylab("Mean Distance to the Khoroo")
g1
g2 <- ggplot(d, aes(x=entry, y = d2, group=entry))  +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Entry") + ylab("Mean Distance to the Mobi")
g2
View(dat1)
View(dat1)
ggplot(dat1, aes(x=davem, y=khoroo_pop)) +
geom_point(alpha=0.7) +
xlab("Mean Distance to the Khoroo") + ylab("Mean Distance to Market") + ggtitle("")
ggplot(dat1, aes(x=davem, y=khoroo_pop)) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
ggplot(dat1, aes(x=davem, y=khoroo_pop, col=entry)) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
d <- dat1[, .(d1 = mean(davem),
d2 = mean(ws_dmobi)), by = .(entry, khoroo_n)][order(khoroo_n)]
d[, entry:=factor(entry),]
ggplot(dat1, aes(x=davem, y=khoroo_pop, col=entry)) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
ggplot(dat1, aes(x=davem, y=khoroo_pop, col=factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
ggplot(dat1, aes(x=entry, y=khoroo_pop, col=factor(entry))) +
geom_point(alpha=0.7) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
ggplot(dat1, aes(x=entry, y=khoroo_pop, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
View(dat1)
pop <- dat1[,.(pop_st=mean(student)), by = .(khoroo_n, entry)]
ggplot(pop, aes(x=entry, y=pop_st, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
View(pop)
pop <- dat1[,.(pop_st=mean(pop19_59)), by = .(khoroo_n, entry)]
ggplot(pop, aes(x=entry, y=pop_st, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
View(pop)
View(dat1)
pop <- dat1[,.(pop=mean(khoroo_pop)), by = .(khoroo_n, entry)]
ggplot(pop, aes(x=entry, y=pop, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
pop <- dat1[,.(pop=median(khoroo_pop)), by = .(khoroo_n, entry)]
ggplot(pop, aes(x=entry, y=pop, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
View(dat)
View(dat1)
ggplot(pop, aes(x=entry, y=pop, col=factor(entry))) +
geom_point(alpha=0.7) +
stat_boxplot(geom ='errorbar') +
geom_boxplot(aes(fill=factor(entry))) +
xlab("Distance to the Khoroo") + ylab("Market Population") + ggtitle("")
library(boot)
setwd("~/ecn321/pages/HW")
fcst13input <- read.delim("~/Dropbox/SEZIS/Econometrics2/DataAndCode/ElementsOfForecasting/fcst_13/fcst13input.dat")
View(fcst13input)
ch13data <- fcst13input
library(lubridate)
ch13data$OBS
paste0(ch13data$OBS, 01)
paste0(ch13data$OBS, "01")
ymd(paste0(ch13data$OBS, "01"))
ch13data$OBS <- ymd(paste0(ch13data$OBS, "01"))
setwd("~/ecn321/pages/Lectures")
save(ch13data, file="ch13data.Rdata")
